@using BlogMonster.Extensions
@using Firehose.Web.Infrastructure
@using Humanizer
@using ThirdDrawer.Extensions.ClassExtensionMethods

@model Firehose.Web.ViewModels.PreviewViewModel

@foreach (var item in Model.Feed.Items)
{
    var itemUri = item.Links.FirstOrDefault();
    var author = Model.Bloggers.FirstOrDefault(b => b.FeedUris.Any(u => itemUri != null && itemUri.Uri.Host == u.Host));

    if (author == null)
    {
        author = Model.Bloggers.FirstOrDefault(b => itemUri != null && b.WebSite.Host == itemUri.Uri.Host);
    }

    var authorName = author.Coalesce(b => b.FirstName + " " + b.LastName, string.Empty);
    var authorEmail = author.Coalesce(b => b.EmailAddress, string.Empty);
    var link = item.Links.FirstOrDefault().Coalesce(l => l.Uri.ToString(), string.Empty);
    var html = item.Content.Coalesce(c => c.ToHtml(),
                                      item.Summary.Coalesce(c => c.ToHtml(), string.Empty)
        );

    <div class="syndicationItem">
        @if (author != null)
        {
            <img src="@author.GravatarImage()" alt="@author.FirstName @author.LastName avatar" style="float: left; max-width: 65px; margin-right: 10px;" class="img-circle" />
        }
        <h1 class="syndicationItemTitle"><a href="@link" target="_blank">@Html.Raw(item.Title.Text)</a></h1>
        <h2 class="syndicationItemDate">
            @item.PublishDate.Humanize()
            @if (!string.IsNullOrWhiteSpace(authorName))
            {
                <text>|</text>
                if (!string.IsNullOrWhiteSpace(authorEmail))
                {
                    <a href="mailto:@authorEmail">@authorName</a>
                }
                else
                {
                    @authorName
                }
            }
        </h2>

        <div class="syndicationItemContent">
            @Html.Raw(html)
        </div>
        <div class="syndicationItemFooter">
            <a href="@link" class="btn btn-primary">View original post</a>
        </div>
    </div>
    <hr />
}